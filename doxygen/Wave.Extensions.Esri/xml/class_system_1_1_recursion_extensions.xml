<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_system_1_1_recursion_extensions" kind="class" language="C#" prot="public">
    <compoundname>System::RecursionExtensions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_system_1_1_recursion_extensions_1abab98e30cbd8d3ec5e05626a3802d9b1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; <ref refid="interface_system_1_1_i_recursion" kindref="compound">IRecursion</ref>&lt; TSource &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;TSource&gt; &gt; System.RecursionExtensions.SelectRecursive&lt; TSource &gt;</definition>
        <argsstring>(this IEnumerable&lt; TSource &gt; source, Func&lt; TSource, IEnumerable&lt; TSource &gt;&gt; selector)</argsstring>
        <name>SelectRecursive&lt; TSource &gt;</name>
        <param>
          <type>this IEnumerable&lt; TSource &gt;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; TSource, IEnumerable&lt; TSource &gt;&gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Projects each element of a sequence recursively to an T:System.Collections.Generic.IEnumerable`1 and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>A sequence of values to project.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A transform function to apply to each element.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An T:System.Collections.Generic.IEnumerable`1 whose elements who are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Esri/System/Extensions/RecursionExtensions.cs" line="24" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Esri/System/Extensions/RecursionExtensions.cs" bodystart="24" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_system_1_1_recursion_extensions_1a13981587d72e2fea23db3365c6100d0e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; <ref refid="interface_system_1_1_i_recursion" kindref="compound">IRecursion</ref>&lt; TSource &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;TSource&gt; &gt; System.RecursionExtensions.SelectRecursive&lt; TSource &gt;</definition>
        <argsstring>(this IEnumerable&lt; TSource &gt; source, Func&lt; TSource, IEnumerable&lt; TSource &gt;&gt; selector, Func&lt; IRecursion&lt; TSource &gt;, bool &gt; predicate)</argsstring>
        <name>SelectRecursive&lt; TSource &gt;</name>
        <param>
          <type>this IEnumerable&lt; TSource &gt;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; TSource, IEnumerable&lt; TSource &gt;&gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="interface_system_1_1_i_recursion" kindref="compound">IRecursion</ref>&lt; TSource &gt;, bool &gt;</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
<para>Projects each element of a sequence recursively to an T:System.Collections.Generic.IEnumerable`1 and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>A sequence of values to project.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A transform function to apply to each element.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>predicate</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test each element for a condition in each recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An T:System.Collections.Generic.IEnumerable`1 whose elements are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Esri/System/Extensions/RecursionExtensions.cs" line="41" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Esri/System/Extensions/RecursionExtensions.cs" bodystart="41" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_system_1_1_recursion_extensions_1a9414d57928d49e918cf7049bf9f98f38" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; <ref refid="interface_system_1_1_i_recursion" kindref="compound">IRecursion</ref>&lt; TSource &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;TSource&gt; &gt; System.RecursionExtensions.SelectRecursiveImpl&lt; TSource &gt;</definition>
        <argsstring>(IEnumerable&lt; TSource &gt; source, Func&lt; TSource, IEnumerable&lt; TSource &gt;&gt; selector, Func&lt; IRecursion&lt; TSource &gt;, bool &gt; predicate, int depth)</argsstring>
        <name>SelectRecursiveImpl&lt; TSource &gt;</name>
        <param>
          <type>IEnumerable&lt; TSource &gt;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; TSource, IEnumerable&lt; TSource &gt;&gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>Func&lt; <ref refid="interface_system_1_1_i_recursion" kindref="compound">IRecursion</ref>&lt; TSource &gt;, bool &gt;</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>Projects each element of a sequence recursively to an T:System.Collections.Generic.IEnumerable`1 and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TSource</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the source.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>A sequence of values to project.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A transform function to apply to each element.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>predicate</parametername>
</parameternamelist>
<parameterdescription>
<para>The predicate.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An T:System.Collections.Generic.IEnumerable`1 whose elements who are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Esri/System/Extensions/RecursionExtensions.cs" line="63" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Esri/System/Extensions/RecursionExtensions.cs" bodystart="63" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides extension methods for the T:System.IRecursion&lt;TValue&gt; interface. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Esri/System/Extensions/RecursionExtensions.cs" line="10" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Esri/System/Extensions/RecursionExtensions.cs" bodystart="9" bodyend="83"/>
    <listofallmembers>
      <member refid="class_system_1_1_recursion_extensions_1abab98e30cbd8d3ec5e05626a3802d9b1" prot="public" virt="non-virtual"><scope>System::RecursionExtensions</scope><name>SelectRecursive&lt; TSource &gt;</name></member>
      <member refid="class_system_1_1_recursion_extensions_1a13981587d72e2fea23db3365c6100d0e" prot="public" virt="non-virtual"><scope>System::RecursionExtensions</scope><name>SelectRecursive&lt; TSource &gt;</name></member>
      <member refid="class_system_1_1_recursion_extensions_1a9414d57928d49e918cf7049bf9f98f38" prot="private" virt="non-virtual"><scope>System::RecursionExtensions</scope><name>SelectRecursiveImpl&lt; TSource &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
