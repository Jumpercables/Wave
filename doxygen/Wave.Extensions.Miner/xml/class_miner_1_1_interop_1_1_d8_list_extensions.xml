<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_miner_1_1_interop_1_1_d8_list_extensions" kind="class" language="C#" prot="public">
    <compoundname>Miner::Interop::D8ListExtensions</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1aba9a27067ffe9d84c2cce2b1c114d192" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; ID8ListItem &gt;</type>
        <definition>static IEnumerable&lt;ID8ListItem&gt; Miner.Interop.D8ListExtensions.AsEnumerable</definition>
        <argsstring>(this ID8EnumListItem source, int depth)</argsstring>
        <name>AsEnumerable</name>
        <param>
          <type>this ID8EnumListItem</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>Creates an IEnumerable&lt;T&gt; from an ID8EnumListItem </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>An ID8EnumListItem to create an IEnumerable&lt;T&gt; from.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth of the recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An IEnumerable&lt;T&gt; that contains the list items from the input source. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="24" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1ae8a925c851acdd10ba2bd8dd098baa18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; ID8ListItem &gt;</type>
        <definition>static IEnumerable&lt;ID8ListItem&gt; Miner.Interop.D8ListExtensions.AsEnumerable</definition>
        <argsstring>(this ID8EnumListItem source)</argsstring>
        <name>AsEnumerable</name>
        <param>
          <type>this ID8EnumListItem</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Creates an IEnumerable&lt;T&gt; from an ID8EnumListItem </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>An ID8EnumListItem to create an IEnumerable&lt;T&gt; from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An IEnumerable&lt;T&gt; that contains the list items from the input source. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="38" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1a6333eb1a8a9f9481b3b0b50fa4c50605" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; ID8ListItem &gt;</type>
        <definition>static IEnumerable&lt;ID8ListItem&gt; Miner.Interop.D8ListExtensions.AsEnumerable</definition>
        <argsstring>(this ID8List source, int depth)</argsstring>
        <name>AsEnumerable</name>
        <param>
          <type>this ID8List</type>
          <declname>source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>Creates an IEnumerable&lt;T&gt; from an ID8List </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>An ID8List to create an IEnumerable&lt;T&gt; from.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth of the recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An IEnumerable&lt;T&gt; that contains the list items from the input source. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="53" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1a0c5a85d24c0db6ec187be538782951a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; ID8ListItem &gt;</type>
        <definition>static IEnumerable&lt;ID8ListItem&gt; Miner.Interop.D8ListExtensions.AsEnumerable</definition>
        <argsstring>(this ID8List source)</argsstring>
        <name>AsEnumerable</name>
        <param>
          <type>this ID8List</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Creates an IEnumerable&lt;T&gt; from an ID8List </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>An ID8List to create an IEnumerable&lt;T&gt; from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An IEnumerable&lt;T&gt; that contains the list items from the input source. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="67" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1a1d22126bc624e72b3fd31a514383ffc7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Miner.Interop.D8ListExtensions.Count</definition>
        <argsstring>(this ID8List source)</argsstring>
        <name>Count</name>
        <param>
          <type>this ID8List</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively counting all of the Miner.Interop.ID8ListItem in the tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to traverse.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the int representing the number of elements in the tree. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="82" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1ae6588c82df7669337e44c2831287e1dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Miner.Interop.D8ListExtensions.Count</definition>
        <argsstring>(this ID8List source, Func&lt; ID8ListItem, bool &gt; selector, int depth)</argsstring>
        <name>Count</name>
        <param>
          <type>this ID8List</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively counting those Miner.Interop.ID8ListItem that satisfies the <emphasis>selector</emphasis>  match test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test an element for a condition.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum depth of the recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the Int32 representing the number of elements that match the selector. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>selector</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="101" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="101" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1abd53179a8c5a45a01b9cd649194ed468" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Miner.Interop.D8ListExtensions.Count</definition>
        <argsstring>(this ID8List source, Func&lt; ID8ListItem, bool &gt; selector)</argsstring>
        <name>Count</name>
        <param>
          <type>this ID8List</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively counting those Miner.Interop.ID8ListItem that satisfies the <emphasis>selector</emphasis>  match test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test an element for a condition.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the Int32 representing the number of elements that match the selector. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>selector</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="120" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="120" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1adbb7d6420d79f38f0705141eabe03402" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Miner.Interop.D8ListExtensions.Count</definition>
        <argsstring>(this ID8EnumListItem source, Func&lt; ID8ListItem, bool &gt; selector, int depth)</argsstring>
        <name>Count</name>
        <param>
          <type>this ID8EnumListItem</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively counting those Miner.Interop.ID8ListItem that satisfies the <emphasis>selector</emphasis>  match test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The items to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test an element for a condition.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum depth of the recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the Int32 representing the number of elements that match the selector. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>selector</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="140" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="140" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1af2764c71a1adb4c9c2de10a43e2e89fd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int Miner.Interop.D8ListExtensions.Count</definition>
        <argsstring>(this ID8EnumListItem source, Func&lt; ID8ListItem, bool &gt; selector)</argsstring>
        <name>Count</name>
        <param>
          <type>this ID8EnumListItem</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively counting those Miner.Interop.ID8ListItem that satisfies the <emphasis>selector</emphasis>  match test. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The items to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test an element for a condition.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the Int32 representing the number of elements that match the selector. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>selector</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="159" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1a35206fa29fd7f47c537e23b8d726e50d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Miner.Interop.D8ListExtensions.Notify</definition>
        <argsstring>(this ID8List source)</argsstring>
        <name>Notify</name>
        <param>
          <type>this ID8List</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Notifies event listeners that the list has been rebuilt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The source.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="171" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1af061c65f4ce31a05a51e141b95d81a70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; IRecursion&lt; ID8ListItem &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;ID8ListItem&gt; &gt; Miner.Interop.D8ListExtensions.Where</definition>
        <argsstring>(this ID8List source, Func&lt; ID8ListItem, bool &gt; selector, int depth)</argsstring>
        <name>Where</name>
        <param>
          <type>this ID8List</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively selecting only those Miner.Interop.ID8ListItem that satisify the <emphasis>selector</emphasis>  and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test each element for a condition in each recursion.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum depth of the recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an T:System.Collections.Generic.IEnumerable&lt;Miner.Collections.IRecursion&lt;Miner.Interop.ID8ListItem&gt;&gt; whose elements who are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>selector</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="194" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1a93ccbd70d43f1528b4aaca3cc43b88a3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; IRecursion&lt; ID8ListItem &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;ID8ListItem&gt; &gt; Miner.Interop.D8ListExtensions.Where</definition>
        <argsstring>(this ID8EnumListItem source, Func&lt; ID8ListItem, bool &gt; selector, int depth)</argsstring>
        <name>Where</name>
        <param>
          <type>this ID8EnumListItem</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively selecting those Miner.Interop.ID8ListItem that satisify the <emphasis>selector</emphasis>  and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The items to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test each element for a condition in each recursion.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum depth of the recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an T:System.Collections.Generic.IEnumerable&lt;Miner.Collections.IRecursion&lt;Miner.Interop.ID8ListItem&gt;&gt; whose elements who are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>selector</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="217" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="217" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1a46936d202151581e3cb8733751d4cee8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; IRecursion&lt; ID8ListItem &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;ID8ListItem&gt; &gt; Miner.Interop.D8ListExtensions.Where</definition>
        <argsstring>(this ID8List source, Func&lt; ID8ListItem, bool &gt; selector)</argsstring>
        <name>Where</name>
        <param>
          <type>this ID8List</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively selecting only those Miner.Interop.ID8ListItem that satisify the <emphasis>selector</emphasis>  and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test each element for a condition in each recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an T:System.Collections.Generic.IEnumerable&lt;Miner.Collections.IRecursion&lt;Miner.Interop.ID8ListItem&gt;&gt; whose elements who are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>selector</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="239" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="239" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1a342a8958bc1f7520006550784aa0cdb5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; IRecursion&lt; ID8ListItem &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;ID8ListItem&gt; &gt; Miner.Interop.D8ListExtensions.Where</definition>
        <argsstring>(this ID8EnumListItem source, Func&lt; ID8ListItem, bool &gt; selector)</argsstring>
        <name>Where</name>
        <param>
          <type>this ID8EnumListItem</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively selecting those Miner.Interop.ID8ListItem that satisify the <emphasis>selector</emphasis>  and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The items to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test each element for a condition in each recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an T:System.Collections.Generic.IEnumerable&lt;Miner.Collections.IRecursion&lt;Miner.Interop.ID8ListItem&gt;&gt; whose elements who are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="260" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="260" bodyend="266"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1adfe4e4fd456df6a56508085063d52185" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; IRecursion&lt; ID8ListItem &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;ID8ListItem&gt; &gt; Miner.Interop.D8ListExtensions.WhereImpl</definition>
        <argsstring>(ID8List source, Func&lt; ID8ListItem, bool &gt; selector, int depth, int maximum)</argsstring>
        <name>WhereImpl</name>
        <param>
          <type>ID8List</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively selecting only those Miner.Interop.ID8ListItem that satisify the <emphasis>selector</emphasis>  and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test each element for a condition in each recursion.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth of the recursion.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum depth of the recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an T:System.Collections.Generic.IEnumerable&lt;Miner.Collections.IRecursion&lt;Miner.Interop.ID8ListItem&gt;&gt; whose elements who are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para>source or selector </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="292" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="292" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_miner_1_1_interop_1_1_d8_list_extensions_1a317e64eb5a8a0c1a456586d46a60c385" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>IEnumerable&lt; IRecursion&lt; ID8ListItem &gt; &gt;</type>
        <definition>static IEnumerable&lt;IRecursion&lt;ID8ListItem&gt; &gt; Miner.Interop.D8ListExtensions.WhereImpl</definition>
        <argsstring>(ID8EnumListItem source, Func&lt; ID8ListItem, bool &gt; selector, int depth, int maximum)</argsstring>
        <name>WhereImpl</name>
        <param>
          <type>ID8EnumListItem</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Func&lt; ID8ListItem, bool &gt;</type>
          <declname>selector</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
<para>Traverses the <emphasis>source</emphasis>  tree structure recursively selecting only those Miner.Interop.ID8ListItem that satisify the <emphasis>selector</emphasis>  and flattens the resulting sequences into one sequence. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The list to traverse.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>selector</parametername>
</parameternamelist>
<parameterdescription>
<para>A function to test each element for a condition in each recursion.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>The depth of the recursion.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maximum</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum depth of the recursion.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns an T:System.Collections.Generic.IEnumerable&lt;Miner.Collections.IRecursion&lt;Miner.Interop.ID8ListItem&gt;&gt; whose elements who are the result of invoking the recursive transform function on each element of the input sequence. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="333" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="333" bodyend="361"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides extension methods for the Miner.Interop.ID8ListItem, Miner.Interop.ID8EnumListItem and Miner.Interop.ID8List interfaces. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" line="13" column="1" bodyfile="C:/Users/ad-kbaesler/Documents/GitHub/Wave/src/Wave.Extensions.Miner/Miner/Interop/Extensions/D8ListExtensions.cs" bodystart="12" bodyend="364"/>
    <listofallmembers>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1aba9a27067ffe9d84c2cce2b1c114d192" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>AsEnumerable</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1ae8a925c851acdd10ba2bd8dd098baa18" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>AsEnumerable</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1a6333eb1a8a9f9481b3b0b50fa4c50605" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>AsEnumerable</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1a0c5a85d24c0db6ec187be538782951a0" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>AsEnumerable</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1a1d22126bc624e72b3fd31a514383ffc7" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Count</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1ae6588c82df7669337e44c2831287e1dc" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Count</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1abd53179a8c5a45a01b9cd649194ed468" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Count</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1adbb7d6420d79f38f0705141eabe03402" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Count</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1af2764c71a1adb4c9c2de10a43e2e89fd" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Count</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1a35206fa29fd7f47c537e23b8d726e50d" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Notify</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1af061c65f4ce31a05a51e141b95d81a70" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Where</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1a93ccbd70d43f1528b4aaca3cc43b88a3" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Where</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1a46936d202151581e3cb8733751d4cee8" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Where</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1a342a8958bc1f7520006550784aa0cdb5" prot="public" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>Where</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1adfe4e4fd456df6a56508085063d52185" prot="private" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>WhereImpl</name></member>
      <member refid="class_miner_1_1_interop_1_1_d8_list_extensions_1a317e64eb5a8a0c1a456586d46a60c385" prot="private" virt="non-virtual"><scope>Miner::Interop::D8ListExtensions</scope><name>WhereImpl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
